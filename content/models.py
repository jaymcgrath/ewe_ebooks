from django.db import models
from sources import Corpus


# Create your models here.
class Mashup(models.Model):
    """
    Union of multiple sources.Corpus (corpora) and a MashupAlgorithm
    """
    title = models.CharField(max_length=32)
    algorithm = models.ForeignKey(MashupAlgorithm)
    corpora = models.ManyToManyField(to=Corpus)

    def __str__(self):  # __unicode__ on Python 2
        return self.title

    def __repr__(self):
        return self.title

class Output(models.Model):
    """
    Instances of text generated by Mashups
    """
    body = models.Charfield(max_length=144)
    generated = models.DateTimeField(auto_now=True)
    num_votes = models.PositiveIntegerField(default=0)
    mashup = models.ForeignKey(Mashup)


    format_str = "{m}: {b}.. {v}"

    def __str__(self):  # __unicode__ on Python 2
        return format_str.format(m=self.mashup.title, b=self.body[:33], v=self.num_votes)

    def __repr__(self):
        return format_str.format(m=self.mashup.title, b=self.body[:33], v=self.num_votes)




class MashupAlgorithm(models.Model):
    """
    Class of mashup methods and statistics about them
    (managed internally)
    """
    name = models.CharField(max_length=64)
    description = models.TextField
    usage_count = models.IntegerField(default=0)

    def __str__(self):  # __unicode__ on Python 2
        return self.name

    def __repr__(self):
        return self.name




